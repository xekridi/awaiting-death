services:
  db:
    image: postgres:16-alpine
    container_name: default-db
    env_file:
      - .env
    environment:
      POSTGRES_DB: default
      POSTGRES_USER: default
      POSTGRES_PASSWORD: secret
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U default"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: default-redis
    env_file:
      - .env
    ports:
      - "6379:6379"

  web:
    build: .
    container_name: default-web
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - db
      - redis

  worker:
    build: .
    container_name: default-worker
    command: ["celery", "-A", "config", "worker", "--loglevel=info"]
    env_file:
      - .env
    volumes:
      - .:/app
    environment:
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - db
      - redis

  celery-beat:
    build: .
    container_name: default-beat
    command: ["celery", "-A", "config", "beat", "-l", "info"]
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - db
      - redis

  cronworker:
    build: .
    container_name: default-cronworker
    command: ["celery", "-A", "config", "worker", "-l", "info", "-Q", "celery"]
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - db
      - redis

volumes:
  db_data:
